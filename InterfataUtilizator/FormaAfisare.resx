<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>